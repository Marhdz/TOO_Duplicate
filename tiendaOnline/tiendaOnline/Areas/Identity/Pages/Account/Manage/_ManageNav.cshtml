@inject SignInManager<tiendaOnlineUser> SignInManager
@inject UserManager<tiendaOnlineUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills nav-stacked">
    
    <!--Muestra el index si es un un comprador-->
    @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "User"))
    {
        <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Perfil</a></li>
    }
    @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
    {
        <li class="@ManageNavPages.AdministrarNavClass(ViewContext)"><a asp-page="./Administrar">Administrar</a></li>
    }

    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Contraseña</a></li>

    @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "User"))
    {
        <li><a asp-controller="Tarjetas" asp-action="Index">Tarjeta</a></li>
        <li><a asp-controller="Direcciones" asp-action="Index">Direcciones</a></li>
    }


    <li class="@ManageNavPages.VendedorNavClass(ViewContext)"><a asp-page="./Vendedor">Informacion de Vendedor</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <!--li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li-->

</ul>
